buildscript {
	ext {
		springBootVersion = '2.0.4.RELEASE'
	}
	repositories {
		maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
		maven { url 'http://maven.aliyun.com/nexus/content/repositories/jcenter'}
		maven { url 'http://maven.aliyun.com/nexus/content/repositories/google' }
		maven { url 'https://plugins.gradle.org/m2/' }
		maven { url "https://jitpack.io" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.3'
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.google.protobuf'


group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
	maven { url 'http://maven.aliyun.com/nexus/content/repositories/jcenter'}
	maven { url 'http://maven.aliyun.com/nexus/content/repositories/google' }
	maven { url 'https://plugins.gradle.org/m2/' }
	maven { url "https://jitpack.io" }
	mavenCentral()
}

sourceSets {
	main {
		java{
			srcDirs += 'build/generated/source/proto/main/grpc'
			srcDirs += 'build/generated/source/proto/main/java'
		}
	}
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.boot:spring-boot-starter-freemarker')
	//compile("org.springframework.boot:spring-boot-devtools")

	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('org.springframework.security:spring-security-test')
	compile 'org.slf4j:log4j-over-slf4j:1.7.21'
	compile 'com.alibaba:fastjson:1.2.44'

	compile("com.baomidou:mybatis-plus-boot-starter:3.0-RC2")
	compile 'mysql:mysql-connector-java:5.1.38'
}


protobuf {
	protoc {  // protoc 编译器
		artifact = "com.google.protobuf:protoc:3.5.1-1"
	}
	plugins {
		grpc {
			artifact = 'io.grpc:protoc-gen-grpc-java:1.13.1'
		}
	}
	generateProtoTasks {
		all()*.plugins {
			grpc {}
		}
	}
}
